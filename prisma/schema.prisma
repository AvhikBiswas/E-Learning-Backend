// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model User {
  id             String       @id @default(cuid())
  email          String       @unique
  name           String
  password       String
  profilePicture String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  courses        Course[]     @relation("UserCourse")
  enrollments    Enrollment[]
}

model Course {
  id          String       @id @default(cuid())
  title       String
  category    Category
  level       String
  popularity  Popularity
  users       User[]       @relation("UserCourse")
  enrollments Enrollment[]
}

model Enrollment {
  userId   String
  user     User   @relation(fields: [userId], references: [id])
  course   Course @relation(fields: [courseId], references: [id])
  courseId String

  @@id([userId, courseId])
}

enum Category {
  MATH
  SCIENCE
  HISTORY
  LANGUAGE
}

enum Popularity {
  LOW
  MEDIUM
  HIGH
}

model Admin {
  id String @id @default(cuid())
  adminName String
  adminPassWord String
  adminEmail String
}
// we can store it in redis or in system 
model UserOTP {
  id             String       @id @default(cuid())
  email          String
  otp            String
  expirationTime DateTime
}